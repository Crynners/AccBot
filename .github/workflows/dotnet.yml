name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  release-project:
    name: Release AccBot to GitHub Releases
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download AccBot content
      uses: actions/download-artifact@v2
      with:
        name: accbot-content
    - name: Archive AccBot content
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'AccBot.zip'
    - name: Create GitHub Release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release V${{ github.run_number }}
    - name: Upload asset to GitHub Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{steps.create-new-release.upload_url}}
        asset_path: ./AccBot.zip
        asset_name: AccBot.zip
        asset_content_type: application/zip
    
      
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c release
    - name: Upload AccBot content
      uses: actions/upload-artifact@v2
      with:
        name: accbot-content
        path: CryptoBotFunction/bin/Release/netcoreapp3.1
